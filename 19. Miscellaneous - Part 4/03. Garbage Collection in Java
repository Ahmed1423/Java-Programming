Garbage Collection in Java is the process of automatic memory management that helps Java programs run efficiently.

How does it work ? 

Mark and Sweep. 

Mark: It identifies which objects are referenced and which objects are not referenced
Sweep: It removes the objects that are no longer referenced.

Heap has 2 regions: 

Young Generation: Newly Created Objects are stored.
Old Generation: Where Long Lived Objects are stored. 

Two types of Garbage Collection:

Minor Garbage collection: occurs when objects are destroyed in young Generation.
Major Garbage collection: occurs when objects are destroyed in Old Generation.

We cannot decide when garbage collector runs, it is upto the JVM. We do not have any say on it. However, we 
can request the JVM to run the garbage collector in two ways.

1. System.gc()
2. Runtime.getRuntime().gc()

finalize(): called by garbage collector for cleanup operations before destroying object. It is deprecated, use try
with resources now. 

JVM has four types of GC implementations:

- Serial Garbage Collector
- Parallel Garbage Collector
- G1 Garbage Collector: partitions heap into equal size heap regions
- Z Garbage Collector: partitions heap into different size heap regions
